[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "django_on_heroku",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_on_heroku",
        "description": "django_on_heroku",
        "detail": "django_on_heroku",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "Client",
        "importPath": "twilio.rest",
        "description": "twilio.rest",
        "isExtraImport": true,
        "detail": "twilio.rest",
        "documentation": {}
    },
    {
        "label": "Client",
        "importPath": "twilio.rest",
        "description": "twilio.rest",
        "isExtraImport": true,
        "detail": "twilio.rest",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticatedOrReadOnly",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "ListCreateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "CreateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "UpdateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "GenericAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\nDEBUG = True\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "DEBUG = True\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # added\n    # \"debug_toolbar\",\n    \"rest_framework\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    # ...\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    # \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    # ...\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "INTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\nROOT_URLCONF = \"PeersApp.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "ROOT_URLCONF = \"PeersApp.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "WSGI_APPLICATION = \"PeersApp.wsgi.application\"\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"base.User\"",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"base.User\"\nREST_FRAMEWORK = {",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"base.User\"\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"base.User\"\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"base.User\"\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n    #     'DEFAULT_RENDERER_CLASSES': [\n    #         'rest_framework.renderers.JSONRenderer',",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "AUTH_USER_MODEL = \"base.User\"\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n    #     'DEFAULT_RENDERER_CLASSES': [\n    #         'rest_framework.renderers.JSONRenderer',\n    #     ],",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n    #     'DEFAULT_RENDERER_CLASSES': [\n    #         'rest_framework.renderers.JSONRenderer',\n    #     ],\n    #     'DEFAULT_PARSER_CLASSES': [",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=10),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1500),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"VERIFYING_KEY\": None,\n    \"AUDIENCE\": None,\n    \"ISSUER\": None,",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "PeersApp.settings.common",
        "description": "PeersApp.settings.common",
        "peekOfCode": "DJOSER = {\n    \"PASSWORD_RESET_CONFIRM_URL\": \"#/password/reset/confirm/{uid}/{token}\",\n    \"USERNAME_RESET_CONFIRM_URL\": \"#/username/reset/confirm/{uid}/{token}\",\n    \"ACTIVATION_URL\": \"#/activate/{uid}/{token}\",\n    \"SEND_ACTIVATION_EMAIL\": True,\n    \"SERIALIZERS\": {\n        \"activation\": \"djoser.serializers.ActivationSerializer\",\n        \"password_reset\": \"djoser.serializers.SendEmailResetSerializer\",\n        \"password_reset_confirm\": \"djoser.serializers.PasswordResetConfirmSerializer\",\n        \"password_reset_confirm_retype\": \"djoser.serializers.PasswordResetConfirmRetypeSerializer\",",
        "detail": "PeersApp.settings.common",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "PeersApp.settings.dev",
        "description": "PeersApp.settings.dev",
        "peekOfCode": "DEBUG = False\nSECRET_KEY = \"django-insecure-g&@3na06dum*%=qc6yf5q3yewk!xllvz9wt5=prdhe-#8vbom%\"\nALLOWED_HOSTS = [\"*\"]\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "PeersApp.settings.dev",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "PeersApp.settings.dev",
        "description": "PeersApp.settings.dev",
        "peekOfCode": "SECRET_KEY = \"django-insecure-g&@3na06dum*%=qc6yf5q3yewk!xllvz9wt5=prdhe-#8vbom%\"\nALLOWED_HOSTS = [\"*\"]\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_DIRS = [",
        "detail": "PeersApp.settings.dev",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "PeersApp.settings.dev",
        "description": "PeersApp.settings.dev",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, 'static'),",
        "detail": "PeersApp.settings.dev",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "PeersApp.settings.dev",
        "description": "PeersApp.settings.dev",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, 'static'),\n# ]",
        "detail": "PeersApp.settings.dev",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "PeersApp.settings.dev",
        "description": "PeersApp.settings.dev",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, 'static'),\n# ]",
        "detail": "PeersApp.settings.dev",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "PeersApp.settings.prod",
        "description": "PeersApp.settings.prod",
        "peekOfCode": "SECRET_KEY = os.environ[\"SECRET_KEY\"]\n# DEBUG = True\nDEBUG = os.environ[\"DEBUG\"]\nALLOWED_HOSTS = [\"https://peers-app-sh.herokuapp.com\"]\nDATABASES = {\n    \"default\": dj_database_url.config()\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\n# Configure Django App for Heroku.",
        "detail": "PeersApp.settings.prod",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "PeersApp.settings.prod",
        "description": "PeersApp.settings.prod",
        "peekOfCode": "DEBUG = os.environ[\"DEBUG\"]\nALLOWED_HOSTS = [\"https://peers-app-sh.herokuapp.com\"]\nDATABASES = {\n    \"default\": dj_database_url.config()\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\n# Configure Django App for Heroku.\ndjango_on_heroku.settings(locals())\n# https://peers-app-sh.herokuapp.com/",
        "detail": "PeersApp.settings.prod",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "PeersApp.settings.prod",
        "description": "PeersApp.settings.prod",
        "peekOfCode": "ALLOWED_HOSTS = [\"https://peers-app-sh.herokuapp.com\"]\nDATABASES = {\n    \"default\": dj_database_url.config()\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\n# Configure Django App for Heroku.\ndjango_on_heroku.settings(locals())\n# https://peers-app-sh.herokuapp.com/",
        "detail": "PeersApp.settings.prod",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "PeersApp.settings.prod",
        "description": "PeersApp.settings.prod",
        "peekOfCode": "DATABASES = {\n    \"default\": dj_database_url.config()\n}\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\n# Configure Django App for Heroku.\ndjango_on_heroku.settings(locals())\n# https://peers-app-sh.herokuapp.com/",
        "detail": "PeersApp.settings.prod",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "PeersApp.settings.prod",
        "description": "PeersApp.settings.prod",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\n# Configure Django App for Heroku.\ndjango_on_heroku.settings(locals())\n# https://peers-app-sh.herokuapp.com/",
        "detail": "PeersApp.settings.prod",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "PeersApp.asgi",
        "description": "PeersApp.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "PeersApp.asgi",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "PeersApp.urls",
        "description": "PeersApp.urls",
        "peekOfCode": "admin.site.site_header = 'PeersApp Admin'\nadmin.site.index_title = 'Admin'\nurlpatterns = [\n    path(\"\", TemplateView.as_view(template_name=\"index.html\"), name=\"index\"),\n    path(\"peers-admin/\", admin.site.urls),\n    path(\"api/\", include(\"peers_api.urls\")),\n    path('base/', include('base.urls')),\n    # \n    path('api-auth/', include('rest_framework.urls', namespace='rest_framework')),\n    path(\"auth/\", include(\"djoser.urls\")),",
        "detail": "PeersApp.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "PeersApp.urls",
        "description": "PeersApp.urls",
        "peekOfCode": "admin.site.index_title = 'Admin'\nurlpatterns = [\n    path(\"\", TemplateView.as_view(template_name=\"index.html\"), name=\"index\"),\n    path(\"peers-admin/\", admin.site.urls),\n    path(\"api/\", include(\"peers_api.urls\")),\n    path('base/', include('base.urls')),\n    # \n    path('api-auth/', include('rest_framework.urls', namespace='rest_framework')),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),",
        "detail": "PeersApp.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "PeersApp.urls",
        "description": "PeersApp.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", TemplateView.as_view(template_name=\"index.html\"), name=\"index\"),\n    path(\"peers-admin/\", admin.site.urls),\n    path(\"api/\", include(\"peers_api.urls\")),\n    path('base/', include('base.urls')),\n    # \n    path('api-auth/', include('rest_framework.urls', namespace='rest_framework')),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),\n    path(\"api/token/\", TokenObtainPairView.as_view(), name=\"token_obtain_pair\"),",
        "detail": "PeersApp.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "PeersApp.wsgi",
        "description": "PeersApp.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "PeersApp.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "base.migrations.0001_initial",
        "description": "base.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "base.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "base.migrations.0002_remove_user_avatar_remove_user_bio_and_more",
        "description": "base.migrations.0002_remove_user_avatar_remove_user_bio_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='avatar',\n        ),\n        migrations.RemoveField(",
        "detail": "base.migrations.0002_remove_user_avatar_remove_user_bio_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "base.migrations.0003_remove_user_created_profile_updated_and_more",
        "description": "base.migrations.0003_remove_user_created_profile_updated_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0002_remove_user_avatar_remove_user_bio_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='created',\n        ),\n        migrations.AddField(",
        "detail": "base.migrations.0003_remove_user_created_profile_updated_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "base.migrations.0004_user_otp",
        "description": "base.migrations.0004_user_otp",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0003_remove_user_created_profile_updated_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='otp',\n            field=models.IntegerField(blank=True, max_length=6, null=True),\n        ),",
        "detail": "base.migrations.0004_user_otp",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "base.migrations.0005_alter_user_otp",
        "description": "base.migrations.0005_alter_user_otp",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"base\", \"0004_user_otp\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"user\",\n            name=\"otp\",\n            field=models.CharField(blank=True, max_length=6, null=True),\n        ),",
        "detail": "base.migrations.0005_alter_user_otp",
        "documentation": {}
    },
    {
        "label": "UserdAdmin",
        "kind": 6,
        "importPath": "base.admin",
        "description": "base.admin",
        "peekOfCode": "class UserdAdmin(BaseUserAdmin):\n    add_fieldsets = (\n        (\n            None,\n            {\n                \"classes\": (\"wide\",),\n                \"fields\": (\n                    \"username\",\n                    \"email\",\n                    \"phone\",",
        "detail": "base.admin",
        "documentation": {}
    },
    {
        "label": "ProfileAdmin",
        "kind": 6,
        "importPath": "base.admin",
        "description": "base.admin",
        "peekOfCode": "class ProfileAdmin(admin.ModelAdmin):\n    autocomplete_fields = [\"user\"]\n    list_display = [\"user_id\", \"id\", \"user\", \"first_name\", \"last_name\", \"avatar\"]",
        "detail": "base.admin",
        "documentation": {}
    },
    {
        "label": "BaseConfig",
        "kind": 6,
        "importPath": "base.apps",
        "description": "base.apps",
        "peekOfCode": "class BaseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'base'",
        "detail": "base.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "base.models",
        "description": "base.models",
        "peekOfCode": "class User(AbstractUser):\n    email = models.EmailField(unique=True)\n    phone = models.CharField(max_length=15, unique=True)\n    is_phone_verified = models.BooleanField(default=False)\n    is_email_verified = models.BooleanField(default=False)\n    date_joined = models.DateTimeField(_(\"date joined\"), default=timezone.now)\n    otp = models.CharField(max_length=6, blank=True, null=True)\n    USERNAME_FIELD = \"phone\" or \"email\"\n    REQUIRED_FIELDS = [\"username\"]\nclass Profile(models.Model):",
        "detail": "base.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "base.models",
        "description": "base.models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    first_name = models.CharField(max_length=255, null=True, blank=True)\n    last_name = models.CharField(max_length=255, null=True, blank=True)\n    bio = models.CharField(max_length=100, null=True, blank=True)\n    avatar = models.ImageField(null=True, blank=True, default=\"avatar.svg\")\n    updated = models.DateTimeField(auto_now=True)",
        "detail": "base.models",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "class UserCreateSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(style={\"input_type\": \"password\"}, write_only=True)\n    class Meta(DjoserUserCreateSerializer.Meta):\n        # model = User\n        fields = [\"id\", \"username\", \"email\", \"phone\", \"password\"]\n    def validate_phone(self, value):\n        if User.objects.filter(phone=value).exists():\n            raise serializers.ValidationError(\n                \"User with the given phone number already exists.\"\n            )",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "GetOtpSerializer",
        "kind": 6,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "class GetOtpSerializer(serializers.ModelSerializer):\n    phone = serializers.CharField()\n    otp = serializers.CharField(max_length=6, min_length=6, write_only=True)\n    class Meta:\n        model = User\n        fields = [\"otp\", \"phone\"]\n    def validate_phone(self, value):\n        if not User.objects.filter(phone=value).exists():\n            raise serializers.ValidationError(\n                \"No user with the given phone number was found.\"",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "ProfileSerializer",
        "kind": 6,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "class ProfileSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField()\n    class Meta:\n        model = Profile\n        fields = [\"id\", \"user_id\", \"first_name\", \"last_name\", \"bio\", \"avatar\"]\n    def create(self, validated_data):\n        user_id = self.context[\"user_id\"]\n        return Profile.objects.create(user_id=user_id, **validated_data)",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "send_otp",
        "kind": 2,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "def send_otp(otp, VERIFIED_NUMBER):\n    client.messages.create(\n        body=f\"Your OTP is {otp}\", from_=\"+2348069051233\", to=[VERIFIED_NUMBER]\n    )\n# send_otp(otp, validated_data[\"phone\"])\ndef otp_create(phone):\n    num = []\n    num[:0] = str(phone)\n    random_num = int(num[1] + num[3] + num[2] + num[5] + num[4])\n    digits = [i for i in range(0, random_num)]",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "otp_create",
        "kind": 2,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "def otp_create(phone):\n    num = []\n    num[:0] = str(phone)\n    random_num = int(num[1] + num[3] + num[2] + num[5] + num[4])\n    digits = [i for i in range(0, random_num)]\n    otp = \"\"\n    for i in range(6):\n        index = math.floor(random.random() * 10)\n        otp += str(digits[index])\n    return otp",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "account_sid",
        "kind": 5,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "account_sid = \"AC46eb2ae7ab874b8fd3c1307574ff3dc3\"\nauth_token = \"140f71b42196cb4e653b7dcb8d750383\"\nclient = Client(account_sid, auth_token)\ndef send_otp(otp, VERIFIED_NUMBER):\n    client.messages.create(\n        body=f\"Your OTP is {otp}\", from_=\"+2348069051233\", to=[VERIFIED_NUMBER]\n    )\n# send_otp(otp, validated_data[\"phone\"])\ndef otp_create(phone):\n    num = []",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "auth_token",
        "kind": 5,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "auth_token = \"140f71b42196cb4e653b7dcb8d750383\"\nclient = Client(account_sid, auth_token)\ndef send_otp(otp, VERIFIED_NUMBER):\n    client.messages.create(\n        body=f\"Your OTP is {otp}\", from_=\"+2348069051233\", to=[VERIFIED_NUMBER]\n    )\n# send_otp(otp, validated_data[\"phone\"])\ndef otp_create(phone):\n    num = []\n    num[:0] = str(phone)",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "base.serializers",
        "description": "base.serializers",
        "peekOfCode": "client = Client(account_sid, auth_token)\ndef send_otp(otp, VERIFIED_NUMBER):\n    client.messages.create(\n        body=f\"Your OTP is {otp}\", from_=\"+2348069051233\", to=[VERIFIED_NUMBER]\n    )\n# send_otp(otp, validated_data[\"phone\"])\ndef otp_create(phone):\n    num = []\n    num[:0] = str(phone)\n    random_num = int(num[1] + num[3] + num[2] + num[5] + num[4])",
        "detail": "base.serializers",
        "documentation": {}
    },
    {
        "label": "account_sid",
        "kind": 5,
        "importPath": "base.tests",
        "description": "base.tests",
        "peekOfCode": "account_sid = \"AC46eb2ae7ab874b8fd3c1307574ff3dc3\"\nauth_token = \"140f71b42196cb4e653b7dcb8d750383\"\nclient = Client(account_sid, auth_token)\n# def send_otp(otp, VERIFIED_NUMBER):\nmessage = client.messages.create(\n    body=f\"Your OTP is 898989\", from_=\"+2347066367867\", to=[\"+2347066367867\"]\n)\n# send_otp(otp, validated_data[\"phone\"])\nmessage()\nprint(message())",
        "detail": "base.tests",
        "documentation": {}
    },
    {
        "label": "auth_token",
        "kind": 5,
        "importPath": "base.tests",
        "description": "base.tests",
        "peekOfCode": "auth_token = \"140f71b42196cb4e653b7dcb8d750383\"\nclient = Client(account_sid, auth_token)\n# def send_otp(otp, VERIFIED_NUMBER):\nmessage = client.messages.create(\n    body=f\"Your OTP is 898989\", from_=\"+2347066367867\", to=[\"+2347066367867\"]\n)\n# send_otp(otp, validated_data[\"phone\"])\nmessage()\nprint(message())",
        "detail": "base.tests",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "base.tests",
        "description": "base.tests",
        "peekOfCode": "client = Client(account_sid, auth_token)\n# def send_otp(otp, VERIFIED_NUMBER):\nmessage = client.messages.create(\n    body=f\"Your OTP is 898989\", from_=\"+2347066367867\", to=[\"+2347066367867\"]\n)\n# send_otp(otp, validated_data[\"phone\"])\nmessage()\nprint(message())",
        "detail": "base.tests",
        "documentation": {}
    },
    {
        "label": "message",
        "kind": 5,
        "importPath": "base.tests",
        "description": "base.tests",
        "peekOfCode": "message = client.messages.create(\n    body=f\"Your OTP is 898989\", from_=\"+2347066367867\", to=[\"+2347066367867\"]\n)\n# send_otp(otp, validated_data[\"phone\"])\nmessage()\nprint(message())",
        "detail": "base.tests",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "base.urls",
        "description": "base.urls",
        "peekOfCode": "router = DefaultRouter()\n# router.register(\"reg\", UserCreateViewSet, basename=\"reg\")\nrouter.register(\"profile\", ProfileViewSet)\n# Routers provide an easy way of automatically determining the URL conf.\n#\nurlpatterns = [\n    path(\"reg/\", UserCreateAPIView.as_view()),\n    path(\"reg/val/\", validate_user),\n]\nurlpatterns += router.urls",
        "detail": "base.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "base.urls",
        "description": "base.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"reg/\", UserCreateAPIView.as_view()),\n    path(\"reg/val/\", validate_user),\n]\nurlpatterns += router.urls",
        "detail": "base.urls",
        "documentation": {}
    },
    {
        "label": "UserCreateAPIView",
        "kind": 6,
        "importPath": "base.views",
        "description": "base.views",
        "peekOfCode": "class UserCreateAPIView(CreateAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserCreateSerializer\n    permission_classes = [AllowAny]\n@api_view([\"PATCH\"])\n@permission_classes([AllowAny])\ndef validate_user(request):\n    if request.method == \"PATCH\":\n        serializer = GetOtpSerializer(data=request.data, partial=True)\n        # set partial=True to update a data partially",
        "detail": "base.views",
        "documentation": {}
    },
    {
        "label": "ProfileViewSet",
        "kind": 6,
        "importPath": "base.views",
        "description": "base.views",
        "peekOfCode": "class ProfileViewSet(ModelViewSet):\n    queryset = Profile.objects.all()\n    serializer_class = ProfileSerializer\n    permission_classes = [AllowAny]\n    def get_serializer_context(self):\n        return {\"user_id\": self.request.user.id}\n    # def create(self, request, *args, **kwargs):\n    #     serializer = UserCreateSerializer(\n    #         data=request.data,\n    #         context={'user_id': self.request.user.id})",
        "detail": "base.views",
        "documentation": {}
    },
    {
        "label": "validate_user",
        "kind": 2,
        "importPath": "base.views",
        "description": "base.views",
        "peekOfCode": "def validate_user(request):\n    if request.method == \"PATCH\":\n        serializer = GetOtpSerializer(data=request.data, partial=True)\n        # set partial=True to update a data partially\n        serializer.is_valid(raise_exception=True)\n        serializer.save()\n        return Response(\n            {\"Message\": \"You are now Validated\"}, status=status.HTTP_201_CREATED\n        )\nclass ProfileViewSet(ModelViewSet):",
        "detail": "base.views",
        "documentation": {}
    },
    {
        "label": "PeersApiConfig",
        "kind": 6,
        "importPath": "peers_api.apps",
        "description": "peers_api.apps",
        "peekOfCode": "class PeersApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'peers_api'",
        "detail": "peers_api.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "peers_api.urls",
        "description": "peers_api.urls",
        "peekOfCode": "urlpatterns = [\n    #  path(\"\", admin.site.urls),\n]",
        "detail": "peers_api.urls",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"PeersApp.settings.dev\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]